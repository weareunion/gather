language: php
dist: xenial

addons:
  apt:
    packages:
      - gdb
      - lcov

env:
  global:
    - TEST_PHP_ARGS="-q -s output.txt -g XFAIL,FAIL,BORK,WARN,LEAK,SKIP -x --show-diff"
    - REPORT_EXIT_STATUS=1
    - SERVER_DISTRO=ubuntu1604
    - SERVER_VERSION=4.2.0
    - DEPLOYMENT=STANDALONE

jobs:
  include:

    - stage: Smoke Testing
      php: 7.3

    # Test remaining PHP versions
    - stage: Test
      php: 7.0
    - stage: Test
      php: 7.1
    - stage: Test
      php: 7.2
    - stage: Test
      php: 7.4

    # Test against various server topologies
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=STANDALONE_SSL
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=SHARDED_CLUSTER
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=SHARDED_CLUSTER_RS
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=STANDALONE_AUTH
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=REPLICASET
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=REPLICASET_SINGLE
    - stage: Test
      php: 7.3
      env:
        - DEPLOYMENT=REPLICASET_AUTH

    # Test against older server versions
    - stage: Test
      php: 7.1
      dist: trusty
      env:
        - SERVER_DISTRO=ubuntu1404
        - SERVER_VERSION=3.0.15
        - DEPLOYMENT=REPLICASET_OLD
    - stage: Test
      php: 7.1
      dist: trusty
      env:
        - SERVER_DISTRO=ubuntu1404
        - SERVER_VERSION=3.0.15
        - DEPLOYMENT=STANDALONE_OLD
    - stage: Test
      php: 7.3
      env:
        - SERVER_VERSION=3.2.22
        - DEPLOYMENT=STANDALONE_OLD
    - stage: Test
      php: 7.3
      env:
        - SERVER_VERSION=3.4.19
        - DEPLOYMENT=STANDALONE_OLD
    - stage: Test
      php: 7.3
      env:
        - SERVER_VERSION=3.6.10
    - stage: Test
      php: 7.1
      env:
        - SERVER_VERSION=4.0.12

    # Test with different configure options
    - stage: Test
      php: 7.3
      env:
        - CONFIGURE_OPTS="--with-mongodb-client-side-encryption=no"

before_install:
  - pip install --user "mongo-orchestration>=0.6.7,<1.0"
  - .travis.scripts/before_install.sh
  - export SERVER_FILENAME=mongodb-linux-x86_64-${SERVER_DISTRO}-${SERVER_VERSION}
  - wget -qO- http://fastdl.mongodb.org/linux/${SERVER_FILENAME}.tgz | tar xz
  - export PATH=${PWD}/${SERVER_FILENAME}/bin:${PATH}
  - mongod --version
  - mongo-orchestration --version
  - php -r 'if ( ! ($f = php_ini_loaded_file())) { $f = PHP_CONFIG_FILE_PATH . "/php.ini"; } file_put_contents($f, "variables_order=EGPCS\n", FILE_APPEND); $a = file($f, FILE_IGNORE_NEW_LINES); var_dump($a[count($a)-1]);'

before_script:
  - export MONGO_ORCHESTRATION_HOME=${PWD}/orchestration
  - mkdir -p ${MONGO_ORCHESTRATION_HOME}/lib
  - cp ${PWD}/scripts/ssl/client.pem ${MONGO_ORCHESTRATION_HOME}/lib/client.pem
  - mongo-orchestration start
  - .travis.scripts/setup_mo.sh
  - ulimit -a
  - ulimit -c unlimited || true
  - .travis.scripts/before_script.sh

script:
  - export MONGODB_URI=`cat /tmp/uri.txt`
  - echo $MONGODB_URI
  - make test

after_success:
  - make coveralls

after_failure:
  - find . -name 'core*' -exec .travis.scripts/debug-core.sh {} \;
  - find . -name '*.diff' -exec .travis.scripts/debug-diff.sh {} \;

after_script:
  - mongo-orchestration stop
